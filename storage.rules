rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {

    function isSignedIn() { return request.auth != null; }
    function isAdminByEmail() {
      return isSignedIn()
        && request.auth.token.email != null
        && request.auth.token.email == "admin@ags-activity.com";
    }
    function isAdminByClaim() { return isSignedIn() && request.auth.token.admin == true; }
    function isAdminByRole() {
      return isSignedIn()
        && exists(/databases/(default)/documents/users/$(request.auth.uid))
        && get(/databases/(default)/documents/users/$(request.auth.uid)).data.role == "admin";
    }
    function isAdmin() { return isAdminByEmail() || isAdminByClaim() || isAdminByRole(); }

    function isAllowedImage() {
      return request.resource.contentType.matches('image/.*')
          || request.resource.contentType == 'application/octet-stream';
    }

    // Allow public read for activity images; write restricted to admins
    match /activities/{allPaths=**} {
      allow read: if true;
      allow write: if isAdmin() && isAllowedImage() && request.resource.size < 10 * 1024 * 1024;
    }

    match /{path=**} { allow read, write: if false; }
  }
}
