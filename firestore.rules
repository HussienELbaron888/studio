
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check if a user is an admin
    function isAdmin() {
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Helper function to check if a user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Rules for the 'users' collection
    match /users/{userId} {
      // Users can read and write to their own document
      allow read, write: if request.auth.uid == userId;
      // Admins can read any user document (for potential future use)
      allow get: if isAdmin();
    }

    // Rules for public content like activities and trips
    match /activities/{activityId} {
      // Anyone can read activities
      allow get, list: if true;
      // Only admins can create, update, or delete activities
      allow write: if isAdmin();
    }
    
    match /trips/{tripId} {
      // Anyone can read trips
      allow get, list: if true;
      // Only admins can create, update, or delete trips
      allow write: if isAdmin();
    }

    // Rules for user-specific subcollections, like subscriptions
    match /users/{userId}/subscriptions/{subscriptionId} {
      // A user can manage their own subscriptions
      allow read, write, create, delete: if request.auth.uid == userId;
    }
  }
}
