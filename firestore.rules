
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the user is an admin
    function isAdmin() {
      // Check if the user is authenticated and if their role is 'admin' in the users collection
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Anyone can read activities and trips
    match /activities/{activityId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    match /trips/{tripId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Users can read their own data. Admins can read anyone's data.
    match /users/{userId} {
      allow get: if request.auth != null && (request.auth.uid == userId || isAdmin());
      allow list: if isAdmin();
      allow create: if request.auth != null;
      allow update: if request.auth != null && request.auth.uid == userId;

      // Users can manage their own subscriptions
      match /subscriptions/{subscriptionId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
    }
  }
}
