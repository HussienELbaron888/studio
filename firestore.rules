
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function isAdmin() {
      return request.auth.token.role == 'admin';
    }

    // USERS collection
    // Let users read their own data, but only admins create/update/delete.
    match /users/{userId} {
      allow read: if isSignedIn() && isOwner(userId) || isAdmin();
      allow create, update, delete: if isAdmin();
    }

    // ACTIVITIES, TRIPS, EVENTS, TALENTS collections
    // Allow anyone to read. Only admins can write.
    match /{collection}/{docId} 
    where collection in ['activities', 'trips', 'events', 'talents'] {
      allow read: if true;
      allow write: if isSignedIn() && isAdmin();
    }
    
    // SUBSCRIPTIONS collection
    // Let users create their own subscriptions.
    // Let users read their own subscriptions.
    // Admins can read all subscriptions.
    // No one can update or delete subscriptions through client SDK for data integrity.
    match /subscriptions/{subId} {
      allow create: if isSignedIn() && request.resource.data.userId == request.auth.uid;
      allow read: if (isSignedIn() && isOwner(request.resource.data.userId)) || isAdmin();
      allow update, delete: if false; 
    }
  }
}
