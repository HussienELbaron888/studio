rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isSignedIn() { return request.auth != null; }

    function isAdminByEmail() {
      return isSignedIn()
        && request.auth.token.email != null
        && (request.auth.token.email in [
          "hussienelbaron888@gmail.com",
          "admin@ags-activity.com"
        ]);
    }

    function isAdminByRole() {
      return isSignedIn()
        && exists(/databases/$(database)/documents/users/$(request.auth.uid))
        && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "admin";
    }

    function isAdmin() { return isAdminByEmail() || isAdminByRole(); }

    match /activities/{doc} { 
      allow read: if true; 
      allow write: if isAdmin(); 
    }
    match /trips/{doc} { 
      allow read: if true; 
      allow write: if isAdmin(); 
    }
    match /gallery/{doc} { 
      allow read: if true; 
      allow write: if isAdmin(); 
    }
    match /suppliers/{doc} { 
      allow read: if true; 
      allow write: if isAdmin(); 
    }
    match /events/{doc} { 
      allow read: if true; 
      allow write: if isAdmin(); 
    }

    match /users/{uid} {
      allow read: if isAdmin() || (isSignedIn() && request.auth.uid == uid);
      allow write: if isAdmin() || (isSignedIn() && request.auth.uid == uid);
      match /subscriptions/{subId} {
        allow read, write: if isSignedIn() && request.auth.uid == uid;
      }
    }
  }
}
