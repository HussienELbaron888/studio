
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isSignedIn() { return request.auth != null; }

    function isAdminByEmail() {
      return isSignedIn()
        && request.auth.token.email != null
        && (request.auth.token.email in [
          "hussienelbaron888@gmail.com",
          "admin@ags-activity.com"
        ]);
    }

    function isAdminByRole() {
      return isSignedIn()
        && exists(/databases/$(database)/documents/users/$(request.auth.uid))
        && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "admin";
    }

    function isAdmin() { return isAdminByEmail() || isAdminByRole(); }
    
    // For debugging, allow read on all documents
    // But keep write restricted to admins.
    match /{document=**} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // This is more secure, but we'll use the one above for now
    // match /activities/{doc} { allow read: if true; allow write: if isAdmin(); }
    // match /trips/{doc}      { allow read: if true; allow write: if isAdmin(); }
    // match /users/{uid} {
    //   allow read: if isAdmin() || (isSignedIn() && request.auth.uid == uid);
    //   allow write: if isAdmin() || (isSignedIn() && request.auth.uid == uid);
    // }
    // match /users/{uid}/subscriptions/{subId} {
    //   allow read, write: if isSignedIn() && request.auth.uid == uid;
    // }
  }
}
