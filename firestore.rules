
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an admin
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // A user can read their own document
      // An admin can read any user document
      allow read: if request.auth.uid == userId || isAdmin();
      
      // A user can create their own document (on registration)
      allow create: if request.auth.uid == userId;

      // A user can update their own document
      allow update: if request.auth.uid == userId;

      // Only admins can delete users (optional, good practice)
      allow delete: if isAdmin();
      
      // Rules for the 'subscriptions' subcollection
      match /subscriptions/{subscriptionId} {
        // A user can read and write to their own subscriptions
        allow read, write: if request.auth.uid == userId;
      }
    }

    // Rules for the 'activities' collection
    match /activities/{activityId} {
      // Any authenticated user can read activities
      allow read: if request.auth != null;
      
      // Only admins can create, update, or delete activities
      allow write: if isAdmin();
    }
  }
}
