rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    function isSignedIn() { return request.auth != null; }
    function isAdmin() {
      return isSignedIn() && exists(/databases/$(database)/documents/admins/$(request.auth.uid)/profile);
    }

    // Public content
    match /activities/{activityId} {
      allow read: if true;
      allow create: if isAdmin();
      allow update, delete: if isAdmin();
    }

    match /trips/{tripId} {
      allow read: if true;
      allow create: if isAdmin();
      allow update, delete: if isAdmin();
    }

    // User subscriptions (activities + trips + anything else)
    match /users/{uid}/subscriptions/{subId} {
      // STRICTER: only allow a signed-in user to write to *their own* subscriptions
      allow create: if isSignedIn() && request.auth.uid == uid;
      // Allow the owner to read & delete their own subscription, or any admin
      allow read, delete: if isAdmin() || (isSignedIn() && request.auth.uid == uid);
      allow update: if false;
    }

    // Admin profiles
    match /admins/{adminUid}/profile {
      allow read, write: if isAdmin();
    }

    // Deny everything else by default
    match /{document=**} {
      allow read, write: if isAdmin();
    }
  }
}