rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to get user role
    function getRole() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role;
    }

    // Helper function to check if user is admin
    function isAdmin() {
      return request.auth != null && getRole() == 'admin';
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // An admin can read/write any user document. A user can read/write their own document.
      allow read, write: if isAdmin() || request.auth.uid == userId;

      // Rules for user subscriptions subcollection
      match /subscriptions/{subscriptionId} {
        // A user can manage their own subscriptions. Admins can view any subscription.
        allow read, list, create: if request.auth.uid == userId;
        allow list, read: if isAdmin();
      }
    }
    
    // Rules for the 'activities' collection
    match /activities/{activityId} {
      // Anyone can read activities.
      allow read: if true;
      // Only admins can create, update, or delete activities.
      allow write: if isAdmin();
    }

    // Rules for the 'trips' collection
    match /trips/{tripId} {
      // Anyone can read trips.
      allow read: if true;
      // Only admins can create, update, or delete trips.
      allow write: if isAdmin();
    }
  }
}
