rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isSignedIn() { return request.auth != null; }

    function isAdminByEmail() {
      return isSignedIn()
        && request.auth.token.email != null
        && (request.auth.token.email in [
          "hussienelbaron888@gmail.com",
          "admin@ags-activity.com"
        ]);
    }

    function isAdminByRole() {
      return isSignedIn()
        && exists(/databases/$(database)/documents/users/$(request.auth.uid))
        && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "admin";
    }

    function isAdmin() { return isAdminByEmail() || isAdminByRole(); }
    
    // Rule for user subscriptions subcollection
    match /users/{uid}/subscriptions/{subId} {
        // Allow signed-in users to create subscriptions for themselves.
        // The path itself already ensures they are writing to their own subcollection.
        allow create: if isSignedIn();
        // Admins or the specific user can read/delete their subscriptions.
        allow read, delete: if isAdmin() || (isSignedIn() && request.auth.uid == uid);
    }

    // This is a temporary broad read rule for debugging.
    // All writes are protected.
    match /{document=**} {
      allow read: if true;
      allow write: if isAdmin();
    }
  }
}
