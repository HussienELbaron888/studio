
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isSignedIn() { 
      return request.auth != null; 
    }
    function isOwner(uid) {
      return isSignedIn() && request.auth.uid == uid;
    }
    function isAdmin() {
      return isOwner(get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
    }

    // Public content is readable by anyone, writable only by admins
    match /activities/{docId} { 
      allow read: if true; 
      allow write: if isAdmin(); 
    }
    match /trips/{docId} { 
      allow read: if true; 
      allow write: if isAdmin(); 
    }
    
    // Users can read their own user document, admins can read any
    match /users/{userId} {
      allow read, write: if isOwner(userId) || isAdmin();
    }
    
    // Rules for the unified 'subscriptions' collection
    match /subscriptions/{subId} {
        // Allow create if user is logged in and the userId in the document matches their own uid
        allow create: if isSignedIn() && request.resource.data.userId == request.auth.uid;
        
        // Allow read, update, delete only for the owner of the subscription or an admin
        allow read, update, delete: if (isSignedIn() && resource.data.userId == request.auth.uid) || isAdmin();
    }
  }
}
