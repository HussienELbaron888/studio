rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Function to check if the user is an admin
    function isAdmin() {
      // Check if the user is authenticated and if their document in 'users' collection has role 'admin'
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Rules for users collection
    match /users/{userId} {
      // Admins can read/write any user document. Users can only read/write their own.
      allow read, write: if request.auth.uid == userId || isAdmin();
    }

    // Rules for activities collection
    match /activities/{activityId} {
      // Anyone can read activities
      allow read: if true;
      // Only admins can create, update, delete activities
      allow write: if isAdmin();
    }

    // Rules for trips collection
    match /trips/{tripId} {
      // Anyone can read trips
      allow read: if true;
      // Only admins can create, update, delete trips
      allow write: if isAdmin();
    }

    // Rules for subscriptions subcollection
    match /users/{userId}/subscriptions/{subscriptionId} {
      // A user can only read and create their own subscriptions.
      allow read, create: if request.auth.uid == userId;
      // No one can update or delete subscriptions directly through client.
      allow update, delete: if false;
    }
  }
}
