
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }

    function isAdmin() {
      // Check for role in a user document
      return isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Public content can be read by anyone
    match /activities/{activityId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    match /trips/{tripId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // Users can manage their own user document
    match /users/{userId} {
      allow read, write: if isOwner(userId) || isAdmin();
    }

    // Users can only manage their own subscriptions
    match /users/{userId}/subscriptions/{subscriptionId} {
      allow read, create, delete: if isOwner(userId);
      // Prevent users from changing the userId field after creation
      allow update: if isOwner(userId) && request.resource.data.userId == resource.data.userId;
    }
    
    // Default deny all other reads/writes
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
